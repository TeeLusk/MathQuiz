<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zMzMzCwh+xK1GJTDWtcYOwAAAABJRU5ErkJggg==
</value>
  </data>
</root>